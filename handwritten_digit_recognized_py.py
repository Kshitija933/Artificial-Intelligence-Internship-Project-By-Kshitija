# -*- coding: utf-8 -*-
"""Handwritten Digit Recognized.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Eaacf3o8tUnmdgrRxJsw7V6L43Ftf3gt

***Handwritten Digit Recognized***

**Step 1: Install Required Libraries**
"""

pip install tensorflow

"""**Step 2: Import Libraries**"""

import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D
from tensorflow.keras.utils import to_categorical

"""**Step 3: Load and Preprocess the MNIST Dataset**"""

# Load data
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Normalize the images
x_train = x_train / 255.0
x_test = x_test / 255.0

# Reshape for CNN input
x_train = x_train.reshape(-1, 28, 28, 1)
x_test = x_test.reshape(-1, 28, 28, 1)

# One-hot encode labels
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

"""**Step 4: Build the CNN Model**"""

model = Sequential([
    Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D(pool_size=(2, 2)),
    Flatten(),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

"""**Step 5: Compile the Model**"""

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

"""**Step 6: Train the Model**"""

model.fit(x_train, y_train, epochs=5, validation_data=(x_test, y_test))

"""**Step 7: Evaluate the Model**"""

test_loss, test_acc = model.evaluate(x_test, y_test)
print("Test Accuracy:", test_acc)

"""**Step 8: Save the Model**"""

model.save("handwritten_digit_model.h5")