# -*- coding: utf-8 -*-
"""Spam Email Classifier.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iFOivmzlSuEHn7qBQBLyziNU_ZBJ9Zyn

***Spam Email Classifier***

**Step 1:Import Required Libraries**
"""

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

"""**Step 2: Load and View Dataset**"""

# Load the dataset
df = pd.read_csv('spam.csv', encoding='latin-1')

# View the first few rows
print(df.head())

"""**Step 3: Data Cleaning and Preprocessing**"""

# Keep only the required columns
df = df[['v1', 'v2']]
df.columns = ['label', 'text']  # Rename for clarity

# Map labels: 'ham' -> 0, 'spam' -> 1
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# Check for null values
print(df.isnull().sum())

"""**Step 4: Text Vectorization**"""

# Create the vectorizer
vectorizer = CountVectorizer()

# Transform text data into feature vectors
X = vectorizer.fit_transform(df['text'])

# Target values
y = df['label']

"""**Step 5: Train-Test Split**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""**Step 6: Train the Model (Naive Bayes)**"""

# Initialize and train the Naive Bayes model
model = MultinomialNB()
model.fit(X_train, y_train)

"""**Step 7: Make Predictions and Evaluated**"""

# Predict on test set
y_pred = model.predict(X_test)

# Show classification report
print(classification_report(y_test, y_pred))